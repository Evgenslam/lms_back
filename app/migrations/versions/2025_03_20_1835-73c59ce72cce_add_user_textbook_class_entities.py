"""add user textbook class entities

Revision ID: 73c59ce72cce
Revises:
Create Date: 2025-03-20 18:35:34.210906

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "73c59ce72cce"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "textbook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_textbook")),
    )
    op.create_index(op.f("ix_textbook_id"), "textbook", ["id"], unique=False)
    op.create_index(op.f("ix_textbook_name"), "textbook", ["name"], unique=True)
    op.create_index(op.f("ix_textbook_slug"), "textbook", ["slug"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "class",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("class_date", sa.Date(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("plan", sa.String(), nullable=True),
        sa.Column("homework", sa.String(), nullable=True),
        sa.Column("questions", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_class_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_class")),
        sa.UniqueConstraint(
            "class_date", "user_id", name=op.f("uq_class_class_date_user_id")
        ),
    )
    op.create_index(op.f("ix_class_class_date"), "class", ["class_date"], unique=False)
    op.create_index(op.f("ix_class_id"), "class", ["id"], unique=False)
    op.create_index(op.f("ix_class_name"), "class", ["name"], unique=False)
    op.create_index(op.f("ix_class_slug"), "class", ["slug"], unique=False)
    op.create_table(
        "lesson",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("textbook_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"],
            ["textbook.id"],
            name=op.f("fk_lesson_textbook_id_textbook"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_lesson")),
        sa.UniqueConstraint(
            "name", "textbook_id", name=op.f("uq_lesson_name_textbook_id")
        ),
    )
    op.create_index(op.f("ix_lesson_id"), "lesson", ["id"], unique=False)
    op.create_index(op.f("ix_lesson_name"), "lesson", ["name"], unique=False)
    op.create_index(op.f("ix_lesson_slug"), "lesson", ["slug"], unique=False)
    op.create_table(
        "usertextbook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=False),
        sa.Column(
            "completed", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"],
            ["textbook.id"],
            name=op.f("fk_usertextbook_textbook_id_textbook"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_usertextbook_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_usertextbook")),
        sa.UniqueConstraint(
            "user_id", "textbook_id", name=op.f("uq_usertextbook_user_id_textbook_id")
        ),
    )
    op.create_index(op.f("ix_usertextbook_id"), "usertextbook", ["id"], unique=False)
    op.create_table(
        "grammar",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name_russian", sa.String(), nullable=False),
        sa.Column("name_japanese", sa.String(), nullable=True),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lesson.id"],
            name=op.f("fk_grammar_lesson_id_lesson"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_grammar")),
    )
    op.create_index(op.f("ix_grammar_id"), "grammar", ["id"], unique=False)
    op.create_index(
        op.f("ix_grammar_name_russian"), "grammar", ["name_russian"], unique=True
    )
    op.create_table(
        "topic",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name_russian", sa.String(), nullable=False),
        sa.Column("name_japanese", sa.String(), nullable=True),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lesson.id"],
            name=op.f("fk_topic_lesson_id_lesson"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_topic")),
    )
    op.create_index(op.f("ix_topic_id"), "topic", ["id"], unique=False)
    op.create_index(
        op.f("ix_topic_name_russian"), "topic", ["name_russian"], unique=True
    )
    op.create_table(
        "userlesson",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column("usertextbook_id", sa.Integer(), nullable=False),
        sa.Column(
            "completed", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lesson.id"],
            name=op.f("fk_userlesson_lesson_id_lesson"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_userlesson_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["usertextbook_id"],
            ["usertextbook.id"],
            name=op.f("fk_userlesson_usertextbook_id_usertextbook"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_userlesson")),
        sa.UniqueConstraint(
            "user_id", "lesson_id", name=op.f("uq_userlesson_user_id_lesson_id")
        ),
    )
    op.create_index(op.f("ix_userlesson_id"), "userlesson", ["id"], unique=False)
    op.create_table(
        "word",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kanji", sa.String(), nullable=True),
        sa.Column("hiragana", sa.String(), nullable=False),
        sa.Column("katakana", sa.String(), nullable=True),
        sa.Column("translation", sa.String(), nullable=True),
        sa.Column("example_sentences", sa.String(), nullable=True),
        sa.Column("lesson_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lesson.id"],
            name=op.f("fk_word_lesson_id_lesson"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_word")),
        sa.UniqueConstraint("hiragana", name=op.f("uq_word_hiragana")),
    )
    op.create_index(op.f("ix_word_id"), "word", ["id"], unique=False)
    op.create_table(
        "classgrammar",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("grammar_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.id"],
            name=op.f("fk_classgrammar_class_id_class"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["grammar_id"],
            ["grammar.id"],
            name=op.f("fk_classgrammar_grammar_id_grammar"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classgrammar")),
        sa.UniqueConstraint(
            "class_id", "grammar_id", name=op.f("uq_classgrammar_class_id_grammar_id")
        ),
    )
    op.create_index(op.f("ix_classgrammar_id"), "classgrammar", ["id"], unique=False)
    op.create_table(
        "classtopic",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("topic_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.id"],
            name=op.f("fk_classtopic_class_id_class"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topic.id"],
            name=op.f("fk_classtopic_topic_id_topic"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classtopic")),
        sa.UniqueConstraint(
            "class_id", "topic_id", name=op.f("uq_classtopic_class_id_topic_id")
        ),
    )
    op.create_index(op.f("ix_classtopic_id"), "classtopic", ["id"], unique=False)
    op.create_table(
        "classuserlesson",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("userlesson_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.id"],
            name=op.f("fk_classuserlesson_class_id_class"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["userlesson_id"],
            ["userlesson.id"],
            name=op.f("fk_classuserlesson_userlesson_id_userlesson"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classuserlesson")),
        sa.UniqueConstraint(
            "class_id",
            "userlesson_id",
            name=op.f("uq_classuserlesson_class_id_userlesson_id"),
        ),
    )
    op.create_index(
        op.f("ix_classuserlesson_id"), "classuserlesson", ["id"], unique=False
    )
    op.create_table(
        "classword",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.id"],
            name=op.f("fk_classword_class_id_class"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["word.id"],
            name=op.f("fk_classword_word_id_word"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classword")),
        sa.UniqueConstraint(
            "class_id", "word_id", name=op.f("uq_classword_class_id_word_id")
        ),
    )
    op.create_index(op.f("ix_classword_id"), "classword", ["id"], unique=False)
    op.create_table(
        "usefullink",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "entity_type",
            sa.Enum("GRAMMAR", "TOPIC", name="entitytype"),
            nullable=False,
        ),
        sa.Column("grammar_id", sa.Integer(), nullable=True),
        sa.Column("topic_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "(grammar_id IS NOT NULL AND topic_id IS NULL) OR (grammar_id IS NULL AND topic_id IS NOT NULL)",
            name=op.f("ck_usefullink_check_only_one_entity_type"),
        ),
        sa.ForeignKeyConstraint(
            ["grammar_id"],
            ["grammar.id"],
            name=op.f("fk_usefullink_grammar_id_grammar"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topic.id"],
            name=op.f("fk_usefullink_topic_id_topic"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_usefullink")),
        sa.UniqueConstraint("url", name=op.f("uq_usefullink_url")),
    )
    op.create_index(op.f("ix_usefullink_id"), "usefullink", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_usefullink_id"), table_name="usefullink")
    op.drop_table("usefullink")
    op.drop_index(op.f("ix_classword_id"), table_name="classword")
    op.drop_table("classword")
    op.drop_index(op.f("ix_classuserlesson_id"), table_name="classuserlesson")
    op.drop_table("classuserlesson")
    op.drop_index(op.f("ix_classtopic_id"), table_name="classtopic")
    op.drop_table("classtopic")
    op.drop_index(op.f("ix_classgrammar_id"), table_name="classgrammar")
    op.drop_table("classgrammar")
    op.drop_index(op.f("ix_word_id"), table_name="word")
    op.drop_table("word")
    op.drop_index(op.f("ix_userlesson_id"), table_name="userlesson")
    op.drop_table("userlesson")
    op.drop_index(op.f("ix_topic_name_russian"), table_name="topic")
    op.drop_index(op.f("ix_topic_id"), table_name="topic")
    op.drop_table("topic")
    op.drop_index(op.f("ix_grammar_name_russian"), table_name="grammar")
    op.drop_index(op.f("ix_grammar_id"), table_name="grammar")
    op.drop_table("grammar")
    op.drop_index(op.f("ix_usertextbook_id"), table_name="usertextbook")
    op.drop_table("usertextbook")
    op.drop_index(op.f("ix_lesson_slug"), table_name="lesson")
    op.drop_index(op.f("ix_lesson_name"), table_name="lesson")
    op.drop_index(op.f("ix_lesson_id"), table_name="lesson")
    op.drop_table("lesson")
    op.drop_index(op.f("ix_class_slug"), table_name="class")
    op.drop_index(op.f("ix_class_name"), table_name="class")
    op.drop_index(op.f("ix_class_id"), table_name="class")
    op.drop_index(op.f("ix_class_class_date"), table_name="class")
    op.drop_table("class")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_textbook_slug"), table_name="textbook")
    op.drop_index(op.f("ix_textbook_name"), table_name="textbook")
    op.drop_index(op.f("ix_textbook_id"), table_name="textbook")
    op.drop_table("textbook")
    # ### end Alembic commands ###
